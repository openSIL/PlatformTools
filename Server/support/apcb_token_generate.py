import os
import re


def apcb_token_generate():
    """!
    Generate APCB token which overrides for Platform

    exception   various
    """

    if not os.path.exists(os.environ['CUSTOM_APCB_PATH']):
        os.makedirs(os.environ['CUSTOM_APCB_PATH'])
    apcb_token_write_file = os.path.join(
        os.environ['CUSTOM_APCB_PATH'], 'ApcbToken.h')
    os.environ['APCB_TOKEN_PLATFORM_OVERRIDE'] = apcb_token_write_file

    apcb_token_read_file = os.path.join(
        os.environ['AMD_COMMON_PLATFORM_DIR'], 'Apcb', 'ApcbToken.h')

    dsc_file_path = os.path.join(
        os.environ['AMD_COMMON_PLATFORM_DIR'], os.environ['BOARD_NAME'], 'Project.dsc')
    try:
        read_token = open(apcb_token_read_file, 'r')
    except OSError:
        print('Cannot open {} file to read'.format(apcb_token_read_file))
        return
    try:
        write_token = open(apcb_token_write_file, 'w')
    except OSError:
        print("Cannot open {} file to write".format(apcb_token_write_file))
        return
    try:
        dsc_file = open(dsc_file_path, 'r')
    except OSError:
        print("Cannot open {} file to read".format(dsc_file_path))
        return

    write_token.write(
        '\n\n// This is Autogenerated file to override APCB tokens\n\n')

    lines = dsc_file.readlines()
    tokenlines = read_token.read()

    for line in lines:
        if "DEFINE" in line:
            # remove trailing whitespace
            # remove comments which starts from '#'
            line = str(line.strip().split('#')[0])
            # remove 'DEFINE' and whitespace, now its only token=value
            tokens = str(line.split('DEFINE')[1]).replace(" ", "").split('=')
            if ((len(tokens) > 1) and (tokens[1] == '1' or tokens[1] == 'TRUE')):
                if tokens[0] in tokenlines:
                    # define the macro here
                    write_token.write('#define '+tokens[0]+'\n')

    write_token.writelines(tokenlines)
    write_token.write('\n')

    write_token.close()
    read_token.close()
    dsc_file.close()
